TRANCRIPTIE INTERVIEW
MARVIN ZWOLSMAN
2 JAN. 2019
VERSIE 1.0
FINAL

Ik loop momenteel stage bij Info Support, dit is mijn afstudeerstage. Info Support is een ICT consultancy bedrijf met meer dan 400 werknemers. Het heeft totaal 4 locaties; het hoofdkantoor is in Veenendaal. Dan heb je nog Den Bosch, Amsterdam en Mechelen. Dat is in België en dat is waar ik terecht ben gekomen.

Mijn stage project is eigenlijk een project vanuit Info Support. Zij hebben een aantal opdrachten online beschikbaar op de website en daar heb ik er een uitgekozen die met blockchain te maken had. Ik had zelf nog geen ervaring met blockchain maar ik vond dit wel een heel interessant onderwerp en je hoort er ook veel over. Ze hebben het probleem dat collega’s veel extra’s doen voor elkaar maar dat dit niet inzichtelijk is. Ze hebben dit dus gecombineerd; ze willen het inzichtelijk maken wat collega’s extra doen op de blockchain. Dit moet wel op een laagdrempelige manier.

Een collega kan dus een andere collega een bonus geven op een laagdrempelige manier door bijvoorbeeld een Slack integratie. Die bonus bestaat uit een aantal punten en een tekstje. Bijvoorbeeld: een collega heeft een andere collega geholpen met het installeren van een Chromecast voor 50 punten. Dat wordt naar mijn applicatie toegestuurd en die zal dit opslaan op de blockchain. Dat is in grote lijnen mijn opdracht. 

Vanuit Info Support is er gekozen voor de blockchain, als ontdekking naar de technologie eigenlijk. Dit is nog een relatief nieuwe technologie en onbekend binnen Info Support zelf. Zo willen ze er meer te weten over te komen.

De opdracht kan ook makkelijk zonder blockchain omdat de blockchain nu ook niet tot zijn recht komt. Dit kan je ook terug vinden in mijn advies. Als je de opdracht maakt zonder blockchain kom je uit op een centrale database bijvoorbeeld een relationele- of graphdatabase. Maar omdat de blockchain dus als onderzoek zal zijn over hoe het zal werken is er toch gekozen voor de blockchain in deze opdracht.

Niet één technologie wordt per definitie de toekomst, dit gaat moeilijk worden. Het heeft voor- en nadelen, deze zijn ook beschreven in mijn advies. Ik kan dus niet per direct antwoord geven op de vraag of het wel of niet de toekomst gaat worden. Ik heb wel zelf nagedacht over in wat voor toepassing of in welke context ik er gebruik van zou kunnen maken.

Dat is bijvoorbeeld de Nationale Auto Pas in Nederland. Dit is een systeem waar alle kilometerstanden in staan en die worden doorgegeven door een APK keurstation of iets in die richting. Om dat nu op te vragen voor een auto kost nu geld. Dat komt dus omdat er een centrale database is die beheerd wordt door 1 partij die dus uitgeeft van dit zijn de kilometerstanden en die is geverifieerd. Zoiets kan je dus op de blockchain doen en dat elk autobedrijf een eigen machine heeft staan die allemaal met elkaar verbonden zijn. Dan kan je dus gratis de kilometerstand doorgeven en opvragen van auto’s. Als je dit dus internationaal maakt kan je het dus ook zo doen dat andere (Europese) landen zich er op kunnen aansluiten. Dan is het geen Nationale Auto Pas maar een Internationale Auto Pas en zo is de kilometerstand voor iedereen inzichtelijk. 

De methodiek die ik heb toegepast is een Agile methode. Ik heb veel ervaring met Scrum binnen school want daar werken we met groepjes van 6. Hier werk ik in mijn eentje en kan ik dus geen Scrum toepassen. Dit komt omdat je dan als persoon meerdere rollen hebt en je met niemand bijvoorbeeld je planning poker kan spelen. Ik heb dus gekozen voor een andere Agile methode, het ASD framework (Adoptive Software Development). Deze kan je wel prima in je eentje toepassen.

ASD bestaat uit 3 fases. Speculate, Collaborate en Learn. Deze 3 fases doe je het hele project lang, deze kan je ook in je eentje doen. Ik heb gekozen voor sprints van 1 week. Elke week ga ik met mijn technisch begeleider samen zitten in de Speculate fase. Dit is om een planning te maken voor aankomende week. Als we samen hebben besloten wat ik ga maken ga ik daar de aankomende week aan werken. Daarna komen we bij elkaar en kijken we terug. Dan kunnen we de nieuwe planning aanpassen aan de bevindingen die we hebben gedaan afgelopen week.

Een concreet voorbeeld is bijvoorbeeld sprint 6. De product owner had een vraag of een REST implementatie kon aanbieden voor de commando’s die ik had gemaakt. Hier had ik van te voren niet op gerekend maar door de manier hoe ik mijn architectuur had gemaakt wist ik dat dit wel mogelijk was. Ik heb toen gezegd dat het wel moet lukken in de aankomende sprint, toen zijn er nog andere taakjes bij gekomen. Een week later toen de sprint voorbij was zijn we terug bijeen gekomen en hebben we terug gekeken naar wat er daadwerkelijk wel en niet is gelukt. Het implementeren van de commando’s over REST was gelukt maar er waren wel nog extra taakjes blijven liggen. Met deze informatie wisten we dat we de aankomende planningen iets minder druk zouden moeten zijn zodat ik wel de hele planning kan maken. Dit zie je ook terug in de opeen komende 4 sprints want er zijn toen geen taakjes blijven liggen. Dan zie je dus dat de planningen beter zijn geworden.

Ik heb het meest geleerd van plannen. Ik ben niet zo goed in plannen, het is niet mijn sterkste punt. Ik vind het ook moeilijk om aan een planning te houden. Ik vond het daarom heel fijn dat we gewoon een sprint hadden van één week zodat we korte feedback rondes hadden. Op die manier konden we de planning steeds beter aanpassen aan de manier hoe ik werk en hoe efficiënt ik ben.

In het begin had ik in mijn PID een 6-tal onderzoeksvragen opgesteld met als hoofdvraag “hoe integreer ik een blockchain in een applicatie”. De andere vragen zijn: “Wat is een blockchain”, “Hoe werkt ethereum”, “Hoe werkt de Slack API”, “Hoe deploy ik een privé blockchain” en “hoe test ik smart contracts”. Deze vragen heb ik allemaal beantwoord gaande mijn stage. Je kan ze terug vinden in mijn blog, daar worden ze omschreven als “probleem” met het antwoord erop wat ik gevonden heb of heb uitgevoerd.

Ik vond het heel leuk om een keertje “under-the-hood” te kijken bij Slack en hoe ik functionaliteit kon toevoegen. Binnen Info Support wordt Slack ook gebruikt als primaire chat applicatie. Om mijn applicatie zo laagdrempelig mogelijk te houden hebben we er dus voor gekozen om een integratie met Slack aan te bieden. Slack heeft heel veel dingen beschikbaar gemaakt voor de ontwikkelaar. Ik heb gekozen voor een Slash commando. Dit is een commando waarbij je een “/” typt en dan zie je de verschillende opties voor verschillende commando’s. Ik heb het Slash commando “/give” gedaan. Deze wordt aangeroepen met een speciale syntax, “/give +100 @ilse met een tekstje”. Deze wordt naar mijn applicatie toegestuurd, die komt binnen en wordt verwerkt. Deze maakt dan contact met de core applicatie. De core applicatie zet hem op de blockchain, dan komt er een reactie terug (van de blockchain) en deze wordt dan ook teruggekoppeld aan de gebruiker. Dan zie je dus eigenlijk hoe je relatief makkelijk een mooie integratie met Slack kan aanbieden voor de gebruikers.

“Hoe integreer ik een blockchain in een applicatie” is mijn hoofdvraag. Dit heb ik onderzocht met het DOT framework. Dit framework wordt gebruikt binnen het Fontys en daar heb ik gebruik van gemaakt. Ik heb gebruik gemaakt van Library & Workshop.

Met Library heb ik gekeken naar online documentatie van hoe werkt het en wat moet ik doen om het werkend te krijgen. Eenmaal aan de slag gegaan heb ik een Proof of Concept applicatie gemaakt (POC). Die maakte eigenlijk alleen verbinding met de blockchain om te kijken of het werkt. Dit gaat via de web3 communicatie methode. Dit is een HTTP request met verschillende JSON payloads. Nu ik dit wist kon ik verder bouwen aan mijn applicatie en een volledige integratie met de blockchain opleveren. Je kan hier ook meer over terug vinden in mijn portfolio, hier staat ook beschreven hoe er gebruik wordt gemaakt van het web3 framework.

Er zijn best wat afwijkingen geweest, in het begin was de opdracht duidelijk in grote lijnen. Dit heb ik ook al eerder gezegd. Het is alleen best nog wel wat veranderd. De vraag van de product owner is nog wel een paar keer bijgesteld waardoor ik de architectuur heb veranderd.

In het begin was het gewoon een hele simpele architectuur met alleen Slack ondersteuning. Toen kwam de product owner met de eis om het uitbreidbaar te maken, voor andere chat applicaties zoals bijvoorbeeld Facebook. Toen ben ik aan de slag gegaan en heb ik het helemaal geabstraheerd zodat Facebook ook geïmplementeerd kon worden. Dit was eigenlijk mijn 2e iteratie van mijn architectuur. Toen kwam de vraag in sprint 6 om de commando’s ook via REST beschikbaar te maken. Wat is het verschil tussen REST en de chat applicaties? De chat applicaties zijn asynchroon en de REST applicatie niet. In mijn architectuur was ik er vanuit gegaan dat er dus een asynchrone manier van reageren zou zijn, dit is dus niet bij REST. Wat heb ik toen gedaan? Ik ben naar de manager (Tim Mahy) gegaan om eens samen te kijken hoe ik dit het beste aan kon pakken. Hij vond dat ik het netjes had geïmplementeerd maar had de tip om eens naar de microservice architectuur te kijken. Op die manier kon je alles helemaal afbakenen van elkaar, elke implementatie heeft zijn eigen blokje. Ook is het niet meer taalafhankelijk, je hoefde geen Java interfaces meer te implementeren die ik had gedefinieerd. Het enige wat je moest weten is welke HTTP calls er gedaan moesten worden naar de core. 

Uiteindelijk bestaat mijn project uit 4 sub-projecten;
-	Het core project, verantwoordelijk voor de communicatie met de blockchain
-	Het Slack project, de daadwerkelijke Slack Integratie
-	Het Facebook project, de Facebook Integratie (PoC). Hierin wordt aangeduid hoe je een andere chat applicatie op een zeer eenvoudige manier kan ondersteunen.
-	Het web project, de frontend. Hier kan je jouw punten in inzien en verzilveren. Ook zie je hier bonussen van collega’s.
Deze 4 projecten zijn ook daadwerkelijk opgeleverd aan Info Support.

Het resultaat voor Info Support is dus een volledig werkende applicatie met een Slack Integratie. Met de vraag om het zo laagdrempelig mogelijk te houden is er dus gekozen voor een Slack integratie omdat dit het meest wordt gebruikt binnen Info Support zelf. Ook is er onderzoek gedaan naar de blockchain en is er een advies over geschreven. Deze is terug te vinden in mijn portfolio. Daar kunnen ze dus uit opmaken wat zijn de voor- en nadelen van de blockchain, waarom zou je het wel of niet gebruiken.

De echte toevoeging van blockchain is vrij weinig. Omdat Slack zo belangrijk is als primaire communicatie vorm en een centrale applicatie is. Een blockchain is decentraal, om er verbinding mee te maken gebruik je wallets om gebruikers te identificeren. Die stap is er nu helemaal niet waardoor je niet echt de blockchain optimaal gebruikt. We gebruiken het nu eigenlijk alleen om dingen in op te slaan en om inzichtelijk te maken voor andere mensen. Je kan naar de data kijken maar je kan geen wijzigingen doen. Dit is door de restrictie die ik heb toegevoegd, alleen mijn core project mag wijzigingen doen. Die is dus ook automatisch de enige die bonussen mag toekennen. Dit is dus alsnog een monarchie omdat er maar 1 partij dingen mag aanpassen/beheerd. Dit is niet het idee van de blockchain en voegt daarom ook niet veel toe. Het enige wat dus extra is, is dat alles inzichtelijk is.

Ik denk dat er nog heel veel mensen aan de slag kunnen met mijn project door de manier hoe het opgezet is. Door de microservice architectuur is het zeer uitbreidbaar. Daardoor kunnen andere mensen met een andere programmeertaal een integratie aan bieden. Het enige wat dus moet gebeuren is correct met de core communiceren en een registratie bij de core (client id + client secret). Zo wordt de applicatie geïdentificeerd. 

Ik heb in mijn eentje aan het project gewerkt maar alsnog wel samen met mijn collega’s. Als ik met een probleem zat of ik had een vraag kon ik gewoon bij mijn collega’s terecht. Dat is wel de echte werksfeer die ik heb geproefd. Info Support is heel open naar elkaar toe, de collega’s zijn heel gemoedelijk. Je kon altijd wel ergens terecht. Dit vond ik heel fijn. Ik heb ook geleerd om met mijn vrijheid om te gaan. Info Support is niet zo streng dat je elke dag van 9-5 moet werken, je bent er vrij in maar je moet wel je verantwoordelijkheid pakken. Soms werk je wat langer, soms werk je wat korter. Of bijvoorbeeld als er een ISKA is werk je een uur langer en ga je met zijn alle eten. Ik vind dat wel tof, die vrijheid kan ik echt waarderen. Ik ben er achter gekomen dat ik dit wel essentieel vind om binnen een bedrijf vrij te zijn. 

Als ik nog een vervolg opleiding zou volgen en daar stage zou lopen zou ik mijn school meer erbij betrekken. Ik ben helemaal opgegaan in mijn stage en het werk leven waardoor school een beetje links heb laten liggen. Ik heb wel school een paar x school expliciet om feedback gevraagd, maar dit heb ik ook binnen Info Support zelf gedaan. Bijvoorbeeld aan Ilse, Tim (de manager) of andere collega’s. Ze staan ook allemaal klaar om feedback te geven en dat is super fijn. Ik heb dus wel geleerd om meer te vragen, je moet zelf actie ondernemen en dat is niet verkeerd maar dat heb ik wel geleerd.
